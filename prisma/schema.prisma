// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String?
  lastName  String?
  email     String   @unique
  hash      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String?
  image          Bytes?
  price          Float
  category       Category       @relation(fields: [categoryId], references: [id])
  categoryId     String         @db.ObjectId
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  productOrderId String?        @db.ObjectId
  productOrders  ProductOrder[]
}

model ProductOrder {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  price     Float
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  user          User           @relation(fields: [userId], references: [id])
  userId        String         @db.ObjectId
  orderAmt      Float
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  productOrders ProductOrder[]
}

enum Role {
  USER
  ADMIN
}
